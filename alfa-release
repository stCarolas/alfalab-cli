#!/usr/bin/env python3
# Publishes release (as git tag)

import sys
import semver
import argparse
from alfaproperties import Config
from git import Repo
from herodotus import Herodotus

config = Config()

def get_cli_args():
    parser = argparse.ArgumentParser(description='Generate changelog')
    parser.add_argument('repo',     
                        metavar = 'directory',
                        type = str, 
                        nargs = 1,
                        help = 'git repository')
    parser.add_argument('--fix',
                        dest = 'fix',
                        action = 'store_const',
                        const=True,
                        default = False,
                        help = 'git repository')
    return parser.parse_args()

def release(repo, is_fix):
    tags = Herodotus(repo).get_tags()
    if tags:
        last_release = tags[len(tags) - 1]
        if last_release:
            if is_fix:  
                return semver.bump_patch(last_release.name)
            else:
                return semver.bump_minor(last_release.name)
    return "1.0.0"
    
def actualize_scripts():
    projects = config.get_value("git","projects").split(",")
    for project in projects:
        repo = config.get_value("git", project + ".url")
        print(Herodotus(repo).get_unreleased()) 

if __name__ == '__main__':
    # print("dir",config.get_value("git", "corp-list-accounts-api.dir"))
    actualize_scripts()
    # args = get_cli_args()
    # repo_directory = args.repo[0]

    # release = release(repo_directory, args.fix)

    # repo = Repo(repo_directory)
    # repo.create_tag(release)
    # repo.git.push(refs=True)
